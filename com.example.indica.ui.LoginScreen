fun authenticateUser(email: String, password: String, onSuccess: () -> Unit, onFailure: (String) -> Unit) {
    val auth = FirebaseAuth.getInstance()
    auth.signInWithEmailAndPassword(email, password)
        .addOnCompleteListener { task ->
            if (task.isSuccessful) {
                // Verificar se o e-mail corresponde ao e-mail do administrador
                if (email == "admin@example.com") { // Substitua pelo e-mail do administrador
                    onSuccess()
                } else {
                    onFailure("Acesso negado. Você não tem permissão para acessar o painel de administração.")
                }
            } else {
                // Tratar erro de autenticação
                onFailure("Erro ao autenticar: ${task.exception?.message}")
            }
        }
}

@Composable
fun LoginScreen(onLoginSuccess: () -> Unit) {
    var email by remember { mutableStateOf("") }
    var password by remember { mutableStateOf("") }
    var errorMessage by remember { mutableStateOf("") }

    Column(modifier = Modifier.padding(16.dp)) {
        TextField(
            value = email,
            onValueChange = { email = it },
            label = { Text("E-mail") }
        )
        TextField(
            value = password,
            onValueChange = { password = it },
            label = { Text("Senha") },
            visualTransformation = PasswordVisualTransformation()
        )
        Button(onClick = {
            authenticateUser(email, password, onLoginSuccess) { error ->
                errorMessage = error
            }
        }) {
            Text("Login")
        }
        if (errorMessage.isNotEmpty()) {
            Text(errorMessage, color = MaterialTheme.colors.error)
        }
    }
} 